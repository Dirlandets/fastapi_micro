version: '2.2'

services:
  migrations:
    restart: always
    build:
      context: .
      args:
        ENV: LOCAL
    env_file:
      - .env
    cpus: 2
    mem_limit: 512m
    ports:
      - '8080:8080'
    volumes:
      - .:/src
    depends_on: 
      - db
    command: "python migrate.py"

  app:
    restart: always
    build:
      context: .
      args:
        ENV: LOCAL
    env_file:
      - .env
    cpus: 2
    mem_limit: 512m
    ports:
      - '8080:8080'
    volumes:
      - .:/src
    depends_on: 
      updater:
        condition: service_started
      redis:
        condition: service_healthy

  updater:
    build:
      context: .
      args:
        ENV: LOCAL
    env_file: 
      - .env
    volumes:
      - .:/src
    command: "python update.py"
    depends_on: 
      - db
      - migrations

  redis:
    restart: always
    image: redis:latest
    volumes:
      - redis_data:/data
    healthcheck:
        test: ["CMD", "redis-cli","ping"]
        interval: 10s
        timeout: 10s
        retries: 3

  db:
    image: postgres:12-alpine
    env_file: .env
    environment:
      POSTGRES_DB: calc_db_robo
      POSTGRES_PASSWORD: calc_db_robo
      POSTGRES_USER: calc_db_robo
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - 5432:5432
  

volumes:
  redis_data:
  pgdata:

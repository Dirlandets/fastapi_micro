version: '2.2'

services:
  tests:
    restart: 'no'
    build:
      context: .
      args:
        ENV: TEST
    env_file:
      - .env
    environment:
      ENV: TEST
    cpus: 1
    mem_limit: 512m
    volumes:
      - .:/app
    depends_on: 
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
      migrations:
        condition: service_started
    command: "pytest"

  migrations:
    restart: 'no'
    build:
      context: .
    env_file: .env
    cpus: 1
    mem_limit: 512m
    volumes:
      - .:/app
    depends_on: 
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    command: "python migrate.py"

  app:
    restart: always
    build:
      context: .
    env_file: .env
    cpus: 2
    mem_limit: 512m
    ports:
      - '8000:8000'
    volumes:
      - .:/app
    depends_on: 
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
      migrations:
        condition: service_started
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload --log-level debug

  redis:
    restart: always
    image: redis:latest
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 10s
      timeout: 10s
      retries: 3

  db:
    image: postgres:12-alpine
    env_file: .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
  

volumes:
  redis_data:
  pgdata: